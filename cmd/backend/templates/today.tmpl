<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]>      <html class="no-js"> <!--<![endif]-->
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Habitz</title>
    <meta name="description" content="Your daily Habit tracker">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <style>
        * {
            box-sizing: border-box;
        }

        /* Create three equal columns that floats next to each other */
        .column {
            width: {{ .Width }}%;
            float: left;
            padding: 10px;
        }

        /* Clear floats after the columns */
        .row:after {
            content: "";
            display: table;
            clear: both;
        }

        .headline {
            padding: 16px;
            font-size: 64px;
            width: 100%;
            text-align: center;
            font-family: Roboto;
            background-color: #DDDDDD;
        }

        .date {
            font-size: 40px;
            width: 100%;
            text-align: center;
            font-family: Courier, monospace;
            background-color: #EEEEEE;
            padding: 10px;
        }

        .weekday {
            font-size: 36px;
            width: 100%;
            text-align: center;
            font-family: Roboto;
        }

        .updated {
            font-size: 9px;
            /* width: 100%; */
            text-align: right;
            font-family: Roboto;
        }

        .user {
            font-size: 48px;
            width: 100%;
            text-align: center;
        }

        .habit {
            padding-bottom: 10px;
            margin-top: 8px;
            font-size: 36px;
        }

        .underline {
            border-bottom: 1px solid black;
        }

        /* Customize the label (the container) */
        .container {
            display: block;
            position: relative;
            padding-left: 80px;
            margin-bottom: 12px;
            cursor: pointer;
            font-size: 36px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        /* Hide the browser's default checkbox */
        .container input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

        /* On mouse-over, add a grey background color */
        /* .container:hover input~.checkmark {
            background-color: #ccc;
        } */

        /* When the checkbox is checked, add a blue background */
        .container input:checked~.checkmark {
            background-color: #2196F3;
        }

        /* Create the checkmark/indicator (hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the checkmark when checked */
        .container input:checked~.checkmark:after {
            display: block;
        }

        /* Create a custom checkbox */
        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 48px;
            width: 48px;
            font-size: 48px;
            background-color: #eee;
        }

        /* Style the checkmark/indicator */
        .container .checkmark:after {
            left: 13px;
            top: 3px;
            width: 15px;
            height: 30px;
            border: solid white;
            border-width: 0 6px 6px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }

        .nohabit {
            text-align: center;
        }

        button {
            float: none;
            display: block;
            text-align: center;
            width: 100%;
            margin: 0;
            padding: 14px;
            font-size: 36px;
            position: absolute;
            bottom: 0;
        }
    </style>
</head>

<body>
    <header>
        <div class="headline"> Habitz</div>
        <div class="date">{{ .Weekday }} {{ .Today }}<div class="updated">{{ .Updated }}</div>
        </div>
    </header>
    <div class="row">
        {{ range $idx, $user := .States }}
        <div class="column">
            <div class="user underline"> {{ $user.Name }} </div>
            <table>
                {{ range $hIdx, $habit := $user.Habitz }}
                <tr>
                    <label class="container habit">{{ $habit.Habit }}
                    {{if $habit.Complete}}
                        <input type="checkbox" id="{{ $habit.ID }}" checked
                            onchange="updateHabit('{{$user.Name}}',{{ $habit.ID }});">
                    {{else}}
                        <input type="checkbox" id="{{ $habit.ID }}"
                            onchange="updateHabit('{{$user.Name}}',{{ $habit.ID }});">
                    {{end}}
                        <span class="checkmark"></span>
                    </label>
                </tr>
                {{else}}
                <tr> <div class="habit nohabit">Day off today ðŸŽ‰</div></tr>
                {{ end }}
            </table>
        </div>
        {{ end }}
    </div>
    <button onclick="location.href='/new';">Add a new Habit!</button>

    <script async defer>
        function updateHabit(user, habit_id) {
            var el = document.getElementById(habit_id);
            console.log("tapped update status: ", habit_id, el.checked)

            // Prepare body
            body = [
                {
                    "user": user,
                    "habitz": [
                        {
                            "id": habit_id,
                            "complete": el.checked
                        }
                    ]
                }
            ]

            // Prepare request
            var request = new XMLHttpRequest();
            var url = "/api/habitz/today";

            request.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log(this.responseText);
                }
            };
            request.open("POST", url);
            request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            request.send(JSON.stringify(body));
        }
        // Reload to get new data
        setTimeout(function () {
            location.reload();
        }, 6 * 3600 * 1000); // Every 6 hours
        openFullscreen();
    </script>
</body>

</html>